/////////////////////////////////////////////////////////////////////////////
// Name:        AircraftDialog.h
// Purpose:     Manager of the Aircraft
// Author:      Matthew Gong
// Created:     07/21/2005
// Copyright:   (c) Matthew Gong
// Licence:     GPL licence
/////////////////////////////////////////////////////////////////////////////

#if defined(__GNUG__) && !defined(__APPLE__)
// #pragma interface
#endif

// -*- C++ -*- generated by wxGlade 0.4cvs on Thu Jul 21 09:08:55 2005

#include <wx/wx.h>
#include <wx/image.h>
// begin wxGlade: ::dependencies
#include <wx/listctrl.h>
#include <wx/treectrl.h>
#include <wx/notebook.h>
#include <wx/grid.h>
// end wxGlade


#ifndef AIRCRAFTDIALOG_H
#define AIRCRAFTDIALOG_H

#include "FGXMLElement.h"
#include "FGXMLParse.h"
#include "TreeItem.h"
#include "Propulsion_Diag.h"

class DiagramDocument;

extern void mkNewFDMFile(const wxString & filename);

class AircraftDialog: public wxDialog {
public:
    // begin wxGlade: AircraftDialog::ids
    enum {
      ID_NOTEBOOK = 43215,
      ID_PM_LIST,
      ID_PM_ADD,
      ID_PM_DEL,
      ID_LISTBOX_GR,
      ID_GR_ADD,
      ID_GR_DEL,
      ID_GR_DETAIL,
      ID_AVAIL_ENGS,
      ID_NEW_ENGINE,
      ID_SUB_ENGS,
      ID_SUB_ENGINE,
      ID_SUB_ENGINE_DETAIL,
      ID_SUB_ENGINE_DEL,
      ID_AVAIL_THRT,
      ID_NEW_THRT,
      ID_TANKS,
      ID_NEW_TANK,
      ID_TANK_DEL,
      ID_TANK_DETAIL,
      ID_OUTPUT_CHS,
      ID_OUTPUT_ADD,
      ID_OUTPUT_DEL,
    };
    // end wxGlade

    AircraftDialog(wxWindow* parent, int id, const wxString& title=_("Aircraft Commander"), const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxSize(800, 600), long style=wxDEFAULT_FRAME_STYLE);
    bool Load(const wxString &fn);
    bool Save(const wxString &fn=wxEmptyString);

private:
    // begin wxGlade: AircraftDialog::methods
    void set_properties();
    void do_layout();
    // end wxGlade
    void init_dialog();
    void LoadFileHeader(JSBSim::Element * el);
    void SaveFileHeader(wxTextOutputStream &out, const wxString & prefix);
    void LoadMetrics(JSBSim::Element * el);
    void SaveMetrics(wxTextOutputStream &out, const wxString & prefix);
    void LoadMass(JSBSim::Element * el);
    void SaveMass(wxTextOutputStream &out, const wxString & prefix);
    void LoadGR(JSBSim::Element * el);
    void SaveGR(wxTextOutputStream &out, const wxString & prefix);
    void LoadPropulsion(JSBSim::Element * el);
    void SavePropulsion(wxTextOutputStream &out, const wxString & prefix);
    void LoadFCS(JSBSim::Element * el);
    void SaveFCS(wxTextOutputStream &out, const wxString & prefix);
    void LoadAerodynamics(JSBSim::Element * el);
    void SaveAerodynamics(wxTextOutputStream &out, const wxString & prefix);
    void LoadOutput(JSBSim::Element * el);
    void SaveOutput(wxTextOutputStream &out, const wxString & prefix);

protected:
    JSBSim::FGXMLParse  *controls_file_parser;
    wxTreeItemId root;
    TreeItemData_aerodynamics *aerodynamics_data;
    wxString fcsfile;
    std::vector<ClientData_tank> tanks;
    std::vector<ClientData_engine> engines;

    // begin wxGlade: AircraftDialog::attributes
    wxStaticBox* sizer_pm_staticbox;
    wxStaticBox* sizer_moment_staticbox;
    wxStaticBox* sizer_mass_staticbox;
    wxStaticBox* sizer_massloc_staticbox;
    wxStaticBox* sizer_vrp_staticbox;
    wxStaticBox* sizer_ep_staticbox;
    wxStaticBox* sizer_arp_staticbox;
    wxStaticText* label_info_name;
    wxTextCtrl* text_ctrl_info_name;
    wxStaticText* label_info_file;
    wxTextCtrl* text_ctrl_info_file;
    wxStaticText* label_info_level;
    wxComboBox* combo_box_info_level;
    wxStaticText* label_info_cfgver;
    wxTextCtrl* text_ctrl_info_cfgver;
    wxStaticText* label_info_ver;
    wxTextCtrl* text_ctrl_info_ver;
    wxStaticText* label_info_author;
    wxTextCtrl* text_ctrl_info_author;
    wxStaticText* label_info_email;
    wxTextCtrl* text_ctrl_info_email;
    wxStaticText* label_info_org;
    wxTextCtrl* text_ctrl_info_org;
    wxStaticText* label_info_date;
    wxTextCtrl* text_ctrl_info_date;
    wxStaticText* label_info_desc;
    wxTextCtrl* text_ctrl_info_desc;
    wxStaticText* label_info_refs;
    wxGrid* grid_info_refs;
    wxStaticText* label_info_limit;
    wxTextCtrl* text_ctrl_info_limit;
    wxStaticText* label_info_notes;
    wxTextCtrl* text_ctrl_info_notes;
    wxPanel* notebook_ac_pane_info;
    wxStaticText* label_wingarea;
    wxTextCtrl* text_ctrl_wingarea;
    wxComboBox* combo_box_wingarea;
    wxStaticText* label_htailarea;
    wxTextCtrl* text_ctrl_htailarea;
    wxComboBox* combo_box_htailarea;
    wxStaticText* label_wingspan;
    wxTextCtrl* text_ctrl_wingspan;
    wxComboBox* combo_box_wingspan;
    wxStaticText* label_htailarm;
    wxTextCtrl* text_ctrl_htailarm;
    wxComboBox* combo_box_htailarm;
    wxStaticText* label_chord;
    wxTextCtrl* text_ctrl_chord;
    wxComboBox* combo_box_chord;
    wxStaticText* label_vtailarea;
    wxTextCtrl* text_ctrl_vtailarea;
    wxComboBox* combo_box_vtailarea;
    wxStaticText* label_wincidence;
    wxTextCtrl* text_ctrl_wincidence;
    wxComboBox* combo_box_wincidence;
    wxStaticText* label_vtailarm;
    wxTextCtrl* text_ctrl_vtailarm;
    wxComboBox* combo_box_vtailarm;
    wxStaticText* label_arp_x;
    wxTextCtrl* text_ctrl_arp_x;
    wxStaticText* label_arp_y;
    wxTextCtrl* text_ctrl_arp_y;
    wxStaticText* label_arp_z;
    wxTextCtrl* text_ctrl_arp_z;
    wxStaticText* label_arp_unit;
    wxComboBox* combo_box_arp_unit;
    wxStaticText* label_ep_x;
    wxTextCtrl* text_ctrl_ep_x;
    wxStaticText* label_ep_y;
    wxTextCtrl* text_ctrl_ep_y;
    wxStaticText* label_ep_z;
    wxTextCtrl* text_ctrl_ep_z;
    wxStaticText* label_ep_unit;
    wxComboBox* combo_box_ep_unit;
    wxStaticText* label_vrp_x;
    wxTextCtrl* text_ctrl_vrp_x;
    wxStaticText* label_vrp_y;
    wxTextCtrl* text_ctrl_vrp_y;
    wxStaticText* label_vrp_z;
    wxTextCtrl* text_ctrl_vrp_z;
    wxStaticText* label_vrp_unit;
    wxComboBox* combo_box_vrp_unit;
    wxPanel* notebook_ac_pane_metrics;
    wxStaticText* label_mass;
    wxTextCtrl* text_ctrl_mass;
    wxComboBox* combo_box_mass_unit;
    wxStaticText* label_mass_x;
    wxTextCtrl* text_ctrl_mass_x;
    wxStaticText* label_mass_y;
    wxTextCtrl* text_ctrl_mass_y;
    wxStaticText* label_mass_z;
    wxTextCtrl* text_ctrl_mass_z;
    wxComboBox* combo_box_mass_locunit;
    wxStaticText* label_ixx;
    wxTextCtrl* text_ctrl_ixx;
    wxComboBox* combo_box_ixx;
    wxStaticText* label_ixz;
    wxTextCtrl* text_ctrl_ixz;
    wxComboBox* combo_box_ixz;
    wxStaticText* label_iyy;
    wxTextCtrl* text_ctrl_iyy;
    wxComboBox* combo_box_iyy;
    wxStaticText* label_iyz;
    wxTextCtrl* text_ctrl_iyz;
    wxComboBox* combo_box_iyz;
    wxStaticText* label_izz;
    wxTextCtrl* text_ctrl_izz;
    wxComboBox* combo_box_izz;
    wxStaticText* label_ixy;
    wxTextCtrl* text_ctrl_ixy;
    wxComboBox* combo_box_ixy;
    wxListBox* list_box_pm;
    wxButton* button_pm_add;
    wxButton* button_pm_del;
    wxPanel* notebook_ac_pane_mass;
    wxListBox* list_ctrl_gr;
    wxButton* button_gr_add;
    wxButton* button_gr_del;
    wxButton* button_gr_detail;
    wxPanel* notebook_ac_pane_ground;
    wxStaticText* label_aeng;
    wxListCtrl* list_ctrl_avail_engines;
    wxButton* button_avail_engines;
    wxStaticText* label_seng;
    wxListCtrl* list_ctrl_sub_engines;
    wxButton* button_sub_engines;
    wxButton* button_sub_engines_del;
    wxButton* button_sub_engines_detail;
    wxStaticText* label_thrust;
    wxListCtrl* list_ctrl_avail_thruster;
    wxButton* button_avail_thrt;
    wxStaticText* label_tanks;
    wxListCtrl* list_ctrl_tanks;
    wxButton* button_tanks;
    wxButton* button_tanks_del;
    wxButton* button_tanks_detail;
    wxStaticText* label_propulsion;
    wxPanel* notebook_ac_pane_propulsion;
    DiagramDocument* notebook_ac_pane_fcs;
    wxTreeCtrl* tree_ctrl_aerodynamics;
    wxPanel* notebook_ac_pane_aero;
    wxStaticText* label_output_name;
    wxTextCtrl* text_ctrl_output_name;
    wxStaticText* label_output_type;
    wxComboBox* combo_box_output_type;
    wxStaticText* label_output_rate;
    wxTextCtrl* text_ctrl_output_rate;
    wxCheckBox* checkbox_output_simu;
    wxCheckBox* checkbox_output_atmo;
    wxCheckBox* checkbox_output_mass;
    wxCheckBox* checkbox_output_sur;
    wxCheckBox* checkbox_output_rates;
    wxCheckBox* checkbox_output_vel;
    wxCheckBox* checkbox_output_forc;
    wxCheckBox* checkbox_output_moments;
    wxCheckBox* checkbox_output_pos;
    wxCheckBox* checkbox_output_coeff;
    wxCheckBox* checkbox_output_ground;
    wxCheckBox* checkbox_output_fcs;
    wxCheckBox* checkbox_output_propulsion;
    wxListBox* list_box_output_adds;
    wxTextCtrl* text_ctrl_output;
    wxButton* button_output_choose;
    wxButton* button_output_add;
    wxButton* button_output_del;
    wxPanel* notebook_ac_pane_output;
    wxNotebook* notebook_ac;
    wxToolBar* frame_ac_toolbar;
    // end wxGlade

    DECLARE_EVENT_TABLE();

public:
    void OnDetailPMList(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnSelectPMList(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnAddPM(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnDelPM(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnAddGR(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnDelGR(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnDetailGR(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnNewAvailEng(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnSubEng(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnNewAvailThrt(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnNewTank(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnOutputChoose(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnOutputAdd(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnOutputDel(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnClose(wxCloseEvent &event);
    void OnCloseButton(wxCommandEvent &event);
    void OnNewButton(wxCommandEvent &event);
    void OnOpenButton(wxCommandEvent &event);
    void OnSaveButton(wxCommandEvent &event);
    void OnSaveAsButton(wxCommandEvent &event);
    void OnTankDetail(wxListEvent &event);
    void OnTankDelete(wxListEvent &event);
    void OnEngineDetail(wxListEvent &event);
    void OnEngineDelete(wxListEvent &event);
    void OnSubEngDetail(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnSubEngDel(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnTankDel(wxCommandEvent &event); // wxGlade: <event_handler>
    void OnTankDetailB(wxCommandEvent &event); // wxGlade: <event_handler>
    wxString GetFileName(void) const 
    {return text_ctrl_info_file->GetValue(); }
    void SetFileName(const wxString & str)
    {text_ctrl_info_file->SetValue(str); }
}; // wxGlade: end class


#endif // AIRCRAFTDIALOG_H
